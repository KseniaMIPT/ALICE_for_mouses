if(!('cluster_id' %in% colnames(clonoset))){
clonoset[, cluster_id := -1]
}
queue <- c(src)
V_genes <- if (v_gene) clonoset$bestVGene[src] else unique(clonoset$bestVGene)
J_genes <- if (j_gene) clonoset$bestJGene[src] else unique(clonoset$bestJGene)
while(length(queue) != 0){
cur <- queue[0]
if(length(queue) > 1){ queue <- queue[2:length(queue)] }
clonoset[cur, cluster_id := comp_id]
candidates <- clonoset[clonoset$cluster_id == -1 &
bestVGene %in% V_genes &
bestJGene %in% J_genes,
.(cdr3aa, clone_id)]
if(nrow(candidates) != 0){
neighbors <- stringdistmatrix(clonoset[,cdr3aa][cur], candidates[,cdr3aa], method = "hamming") <= 1
print(neighbors)
for(n in candidates[neighbors[1,], clone_id]){
clonoset[n, cluster_id := comp_id]
queue <- c(queue, n)
}
}
}
clonoset
}
load_all()
library(devtools)
load_all()
library(tcrgrapher)
library(data.table)
library(edgeR)
# for finding connectivity components of the graph
library(igraph)
file_path <- testthat::test_path("testdata/vaccinated_mice", "")
metadata_path <- testthat::test_path("testdata/metadata_vaccination.tsv")
TCRgrObject <- TCRgrapher(file_path, 1, 3, 4, 5, 7, metadata_path, 1, 2)
bfs_for_TCRs(clonoset(TCRgrObject), 1, 1)
stringdistmatrix(clonoset(TCRgrObject)[,cdr3aa][1], clonoset(TCRgrObject)[,cdr3aa][1:10], method = "hamming")
stringdistmatrix(clonoset(TCRgrObject)[,cdr3aa][1], clonoset(TCRgrObject)[,cdr3aa][1:10], method = "hamming") <= 1
stringdistmatrix(clonoset(TCRgrObject)[,cdr3aa][1], clonoset(TCRgrObject)[,cdr3aa] method = "hamming") <= 1
stringdistmatrix(clonoset(TCRgrObject)[,cdr3aa][1], clonoset(TCRgrObject)[,cdr3aa], method = "hamming") <= 1
stringdistmatrix(clonoset(TCRgrObject)[,cdr3aa][1], clonoset(TCRgrObject)[,cdr3aa][1:10], method = "hamming") <= 1
n <-stringdistmatrix(clonoset(TCRgrObject)[,cdr3aa][1], clonoset(TCRgrObject)[,cdr3aa][1:10], method = "hamming") <= 1
n
ncols(n)
ncolumns(n)
ncols(n)
ncol(n)
bfs_for_TCRs <- function(clonoset, src, comp_id, v_gene = TRUE, j_gene = FALSE){
if(!('cluster_id' %in% colnames(clonoset))){
clonoset[, cluster_id := -1]
}
queue <- c(src)
V_genes <- if (v_gene) clonoset$bestVGene[src] else unique(clonoset$bestVGene)
J_genes <- if (j_gene) clonoset$bestJGene[src] else unique(clonoset$bestJGene)
while(length(queue) != 0){
cur <- queue[0]
if(length(queue) > 1){ queue <- queue[2:length(queue)] }
clonoset[cur, cluster_id := comp_id]
candidates <- clonoset[clonoset$cluster_id == -1 &
bestVGene %in% V_genes &
bestJGene %in% J_genes,
.(cdr3aa, clone_id)]
if(nrow(candidates) != 0){
neighbors <- stringdistmatrix(clonoset[,cdr3aa][cur], candidates[,cdr3aa], method = "hamming") <= 1
print(ncol(neighbors))
for(n in candidates[neighbors[1,], clone_id]){
clonoset[n, cluster_id := comp_id]
queue <- c(queue, n)
}
}
}
clonoset
}
bfs_for_TCRs(clonoset(TCRgrObject), 1, 1)
bfs_for_TCRs(clonoset(TCRgrObject), 2, 1)
bfs_for_TCRs(clonoset(TCRgrObject), 3, 1)
bfs_for_TCRs <- function(clonoset, src, comp_id, v_gene = TRUE, j_gene = FALSE){
if(!('cluster_id' %in% colnames(clonoset))){
clonoset[, cluster_id := -1]
}
queue <- c(src)
V_genes <- if (v_gene) clonoset$bestVGene[src] else unique(clonoset$bestVGene)
J_genes <- if (j_gene) clonoset$bestJGene[src] else unique(clonoset$bestJGene)
while(length(queue) != 0){
cur <- queue[0]
if(length(queue) > 1){ queue <- queue[2:length(queue)] }
clonoset[cur, cluster_id := comp_id]
candidates <- clonoset[clonoset$cluster_id == -1 &
bestVGene %in% V_genes &
bestJGene %in% J_genes,
.(cdr3aa, clone_id)]
if(nrow(candidates) != 0){
neighbors <- stringdistmatrix(clonoset[,cdr3aa][cur], candidates[,cdr3aa][1:10], method = "hamming") <= 1
print(ncol(neighbors))
for(n in candidates[neighbors[1,], clone_id]){
clonoset[n, cluster_id := comp_id]
queue <- c(queue, n)
}
}
}
clonoset
}
bfs_for_TCRs(clonoset(TCRgrObject), 3, 1)
bfs_for_TCRs <- function(clonoset, src, comp_id, v_gene = TRUE, j_gene = FALSE){
if(!('cluster_id' %in% colnames(clonoset))){
clonoset[, cluster_id := -1]
}
queue <- c(src)
V_genes <- if (v_gene) clonoset$bestVGene[src] else unique(clonoset$bestVGene)
J_genes <- if (j_gene) clonoset$bestJGene[src] else unique(clonoset$bestJGene)
while(length(queue) != 0){
cur <- queue[0]
if(length(queue) > 1){ queue <- queue[2:length(queue)] }
clonoset[cur, cluster_id := comp_id]
candidates <- clonoset[clonoset$cluster_id == -1 &
bestVGene %in% V_genes &
bestJGene %in% J_genes,
.(cdr3aa, clone_id)]
if(nrow(candidates) != 0){
neighbors <- stringdistmatrix(clonoset[,cdr3aa][cur], candidates[,cdr3aa], method = "hamming") <= 1
print(clonoset[,cdr3aa][cur])
for(n in candidates[neighbors[1,], clone_id]){
clonoset[n, cluster_id := comp_id]
queue <- c(queue, n)
}
}
}
clonoset
}
bfs_for_TCRs(clonoset(TCRgrObject), 3, 1)
bfs_for_TCRs <- function(clonoset, src, comp_id, v_gene = TRUE, j_gene = FALSE){
if(!('cluster_id' %in% colnames(clonoset))){
clonoset[, cluster_id := -1]
}
queue <- c(src)
V_genes <- if (v_gene) clonoset$bestVGene[src] else unique(clonoset$bestVGene)
J_genes <- if (j_gene) clonoset$bestJGene[src] else unique(clonoset$bestJGene)
while(length(queue) != 0){
cur <- queue[0]
if(length(queue) > 1){ queue <- queue[2:length(queue)] }
clonoset[cur, cluster_id := comp_id]
candidates <- clonoset[clonoset$cluster_id == -1 &
bestVGene %in% V_genes &
bestJGene %in% J_genes,
.(cdr3aa, clone_id)]
if(nrow(candidates) != 0){
neighbors <- stringdistmatrix(clonoset[,cdr3aa][cur], candidates[,cdr3aa], method = "hamming") <= 1
print(cur)
for(n in candidates[neighbors[1,], clone_id]){
clonoset[n, cluster_id := comp_id]
queue <- c(queue, n)
}
}
}
clonoset
}
bfs_for_TCRs(clonoset(TCRgrObject), 3, 1)
bfs_for_TCRs <- function(clonoset, src, comp_id, v_gene = TRUE, j_gene = FALSE){
if(!('cluster_id' %in% colnames(clonoset))){
clonoset[, cluster_id := -1]
}
queue <- c(src)
print(queue)
V_genes <- if (v_gene) clonoset$bestVGene[src] else unique(clonoset$bestVGene)
J_genes <- if (j_gene) clonoset$bestJGene[src] else unique(clonoset$bestJGene)
while(length(queue) != 0){
cur <- queue[0]
print(queue)
if(length(queue) > 1){ queue <- queue[2:length(queue)] }
print(queue)
clonoset[cur, cluster_id := comp_id]
candidates <- clonoset[clonoset$cluster_id == -1 &
bestVGene %in% V_genes &
bestJGene %in% J_genes,
.(cdr3aa, clone_id)]
if(nrow(candidates) != 0){
neighbors <- stringdistmatrix(clonoset[,cdr3aa][cur], candidates[,cdr3aa], method = "hamming") <= 1
print(cur)
for(n in candidates[neighbors[1,], clone_id]){
clonoset[n, cluster_id := comp_id]
queue <- c(queue, n)
}
}
}
clonoset
}
bfs_for_TCRs(clonoset(TCRgrObject), 3, 1)
bfs_for_TCRs <- function(clonoset, src, comp_id, v_gene = TRUE, j_gene = FALSE){
if(!('cluster_id' %in% colnames(clonoset))){
clonoset[, cluster_id := -1]
}
queue <- c(src)
print(queue)
V_genes <- if (v_gene) clonoset$bestVGene[src] else unique(clonoset$bestVGene)
J_genes <- if (j_gene) clonoset$bestJGene[src] else unique(clonoset$bestJGene)
while(length(queue) != 0){
cur <- queue[0]
print(cur)
print(queue)
if(length(queue) > 1){
queue <- queue[2:length(queue)]
} else {
queue <- c()
}
print(queue)
clonoset[cur, cluster_id := comp_id]
candidates <- clonoset[clonoset$cluster_id == -1 &
bestVGene %in% V_genes &
bestJGene %in% J_genes,
.(cdr3aa, clone_id)]
if(nrow(candidates) != 0){
neighbors <- stringdistmatrix(clonoset[,cdr3aa][cur], candidates[,cdr3aa], method = "hamming") <= 1
print(cur)
for(n in candidates[neighbors[1,], clone_id]){
clonoset[n, cluster_id := comp_id]
queue <- c(queue, n)
}
}
}
clonoset
}
bfs_for_TCRs(clonoset(TCRgrObject), 3, 1)
queue <- c(3)
queue[0]
queue[1]
bfs_for_TCRs <- function(clonoset, src, comp_id, v_gene = TRUE, j_gene = FALSE){
if(!('cluster_id' %in% colnames(clonoset))){
clonoset[, cluster_id := -1]
}
queue <- c(src)
V_genes <- if (v_gene) clonoset$bestVGene[src] else unique(clonoset$bestVGene)
J_genes <- if (j_gene) clonoset$bestJGene[src] else unique(clonoset$bestJGene)
while(length(queue) != 0){
cur <- queue[1]
if(length(queue) > 1){
queue <- queue[2:length(queue)]
} else {
queue <- c()
}
clonoset[cur, cluster_id := comp_id]
candidates <- clonoset[clonoset$cluster_id == -1 &
bestVGene %in% V_genes &
bestJGene %in% J_genes,
.(cdr3aa, clone_id)]
if(nrow(candidates) != 0){
neighbors <- stringdistmatrix(clonoset[,cdr3aa][cur], candidates[,cdr3aa], method = "hamming") <= 1
print(cur)
for(n in candidates[neighbors[1,], clone_id]){
clonoset[n, cluster_id := comp_id]
queue <- c(queue, n)
}
}
}
clonoset
}
bfs_for_TCRs(clonoset(TCRgrObject), 3, 1)
bfs_for_TCRs(clonoset(TCRgrObject), 1, 1)
View(TCRgrObject)
bfs_for_TCRs <- function(clonoset, src, comp_id, v_gene = TRUE, j_gene = FALSE){
if(!('cluster_id' %in% colnames(clonoset))){
clonoset[, cluster_id := -1]
}
queue <- c(src)
V_genes <- if (v_gene) clonoset$bestVGene[src] else unique(clonoset$bestVGene)
J_genes <- if (j_gene) clonoset$bestJGene[src] else unique(clonoset$bestJGene)
pb <- txtProgressBar(min = 0, max = nrow(clonoset), style = 3)
while(length(queue) != 0){
cur <- queue[1]
setTxtProgressBar(pb, cur)
if(length(queue) > 1){
queue <- queue[2:length(queue)]
} else {
queue <- c()
}
clonoset[cur, cluster_id := comp_id]
candidates <- clonoset[clonoset$cluster_id == -1 &
bestVGene %in% V_genes &
bestJGene %in% J_genes,
.(cdr3aa, clone_id)]
if(nrow(candidates) != 0){
neighbors <- stringdistmatrix(clonoset[,cdr3aa][cur], candidates[,cdr3aa], method = "hamming") <= 1
for(n in candidates[neighbors[1,], clone_id]){
clonoset[n, cluster_id := comp_id]
queue <- c(queue, n)
}
}
}
clonoset
}
bfs_for_TCRs(clonoset(TCRgrObject), 1, 1)
bfs_for_TCRs <- function(clonoset, src, comp_id, v_gene = TRUE, j_gene = FALSE){
if(!('cluster_id' %in% colnames(clonoset))){
clonoset[, cluster_id := -1]
}
queue <- c(src)
clonoset[src, cluster_id := comp_id]
V_genes <- if (v_gene) clonoset$bestVGene[src] else unique(clonoset$bestVGene)
J_genes <- if (j_gene) clonoset$bestJGene[src] else unique(clonoset$bestJGene)
while(length(queue) != 0){
cur <- queue[1]
if(length(queue) > 1){
queue <- queue[2:length(queue)]
} else {
queue <- c()
}
candidates <- clonoset[clonoset$cluster_id == -1 &
bestVGene %in% V_genes &
bestJGene %in% J_genes,
.(cdr3aa, clone_id)]
if(nrow(candidates) != 0){
neighbors <- stringdistmatrix(clonoset[,cdr3aa][cur], candidates[,cdr3aa], method = "hamming") <= 1
for(n in candidates[neighbors[1,], clone_id]){
clonoset[n, cluster_id := comp_id]
clonoset[cur, cluster_id := comp_id]
queue <- c(queue, n)
}
}
}
clonoset
}
bfs_for_TCRs(clonoset(TCRgrObject), 1, 1)
test <- bfs_for_TCRs(clonoset(TCRgrObject), 1, 1)
View(test)
clonoset(TCRgrObject)
clonoset(TCRgrObject)$cluster_id <- -1
test <- bfs_for_TCRs(clonoset(TCRgrObject), 1, 1)
test <- bfs_for_TCRs(clonoset(TCRgrObject), 1, 1)
View(test)
find_TCR_components_by_bfs <- function(TCRgrObject, v_gene = TRUE, j_gene = FALSE){
src <- 1
comp_id <- 1
clonoset <- clonoset(TCRgrObject)
clonoset[, cluster_id := -1]
while(sum(clonoset[,cluster_id] == -1) != 0){
clonoset <- bfs_for_TCRs(clonoset, src, comp_id, v_gene, j_gene)
src <- clonoset[cluster_id == -1, clone_id]
comp_id <- comp_id + 1
}
clonoset(TCRgrObject) <- TCRgrObject
TCRgrObject
}
find_TCR_components_by_bfs(TCRgrObject)
clonoset(TCRgrObject)[cluster_id == -1,]
clonoset(TCRgrObject)[cluster_id == -1, clone_id]
clonoset(TCRgrObject)[cluster_id == -1, clone_id][1]
find_TCR_components_by_bfs <- function(TCRgrObject, v_gene = TRUE, j_gene = FALSE){
src <- 1
comp_id <- 1
clonoset <- clonoset(TCRgrObject)
clonoset[, cluster_id := -1]
pb <- txtProgressBar(min = 0, max = nrow(clonoset), style = 3)
while(sum(clonoset[,cluster_id] == -1) != 0){
clonoset <- bfs_for_TCRs(clonoset, src, comp_id, v_gene, j_gene)
src <- clonoset[cluster_id == -1, clone_id][1]
comp_id <- comp_id + 1
}
clonoset(TCRgrObject) <- TCRgrObject
TCRgrObject
}
find_TCR_components_by_bfs <- function(TCRgrObject, v_gene = TRUE, j_gene = FALSE){
src <- 1
comp_id <- 1
clonoset <- clonoset(TCRgrObject)
clonoset[, cluster_id := -1]
pb <- txtProgressBar(min = 0, max = nrow(clonoset), style = 3)
while(sum(clonoset[,cluster_id] == -1) != 0){
clonoset <- bfs_for_TCRs(clonoset, src, comp_id, v_gene, j_gene)
src <- clonoset[cluster_id == -1, clone_id][1]
comp_id <- comp_id + 1
setTxtProgressBar(pb, src)
}
clonoset(TCRgrObject) <- TCRgrObject
TCRgrObject
}
find_TCR_components_by_bfs(TCRgrObject)
find_TCR_components_by_bfs(TCRgrObject)
test <- bfs_for_TCRs(clonoset(TCRgrObject), 1, 1)
test <- bfs_for_TCRs(clonoset(TCRgrObject), 2, 1)
test <- bfs_for_TCRs(clonoset(TCRgrObject), 3, 1)
View(test)
test <- bfs_for_TCRs(clonoset(TCRgrObject), 3, 1)
View(test)
file_path <- testthat::test_path("testdata/vaccinated_mice", "")
metadata_path <- testthat::test_path("testdata/metadata_vaccination.tsv")
TCRgrObject <- TCRgrapher(file_path, 1, 3, 4, 5, 7, metadata_path, 1, 2)
test <- bfs_for_TCRs(clonoset(TCRgrObject), 3, 1)
file_path <- testthat::test_path("testdata/vaccinated_mice", "")
metadata_path <- testthat::test_path("testdata/metadata_vaccination.tsv")
TCRgrObject <- TCRgrapher(file_path, 1, 3, 4, 5, 7, metadata_path, 1, 2)
clonoset <- clonoset(TCRgrObject)
src <- 1
comp_id <- 1
sum(clonoset[,cluster_id] == -1)
clonoset <- clonoset(TCRgrObject)
clonoset[, cluster_id := -1]
sum(clonoset[,cluster_id] == -1)
pb <- txtProgressBar(min = 0, max = nrow(clonoset), style = 3)
while(sum(clonoset[,cluster_id] == -1) != 0){
clonoset <- bfs_for_TCRs(clonoset, src, comp_id, v_gene, j_gene)
src <- clonoset[cluster_id == -1, clone_id][1]
comp_id <- comp_id + 1
setTxtProgressBar(pb, src)
}
v_gene = TRUE
j_gene = FALSE
while(sum(clonoset[,cluster_id] == -1) != 0){
clonoset <- bfs_for_TCRs(clonoset, src, comp_id, v_gene, j_gene)
src <- clonoset[cluster_id == -1, clone_id][1]
comp_id <- comp_id + 1
setTxtProgressBar(pb, src)
}
bfs_for_TCRs(clonoset, src, comp_id, v_gene, j_gene)
clonoset[cluster_id == -1, clone_id][1]
comp_id <- comp_id + 1
setTxtProgressBar(pb, src)
clonoset <- bfs_for_TCRs(clonoset, src, comp_id, v_gene, j_gene)
rc <- clonoset[cluster_id == -1, clone_id][1]
file_path <- testthat::test_path("testdata/vaccinated_mice", "")
metadata_path <- testthat::test_path("testdata/metadata_vaccination.tsv")
TCRgrObject <- TCRgrapher(file_path, 1, 3, 4, 5, 7, metadata_path, 1, 2)
pb <- txtProgressBar(min = 0, max = nrow(clonoset), style = 3)
find_TCR_components_by_bfs <- function(TCRgrObject, v_gene = TRUE, j_gene = FALSE){
src <- 1
comp_id <- 1
clonoset <- clonoset(TCRgrObject)
clonoset[, cluster_id := -1]
pb <- txtProgressBar(min = 0, max = nrow(clonoset), style = 3)
while(sum(clonoset[,cluster_id] == -1) != 0){
clonoset <- bfs_for_TCRs(clonoset, src, comp_id, v_gene, j_gene)
src <- clonoset[cluster_id == -1, clone_id][1]
comp_id <- comp_id + 1
setTxtProgressBar(pb, src)
}
clonoset(TCRgrObject) <- TCRgrObject
TCRgrObject
}
test <- find_TCR_components_by_bfs(TCRgrObject)
bfs_for_TCRs <- function(clonoset, src, comp_id, v_gene = TRUE, j_gene = FALSE){
if(!('cluster_id' %in% colnames(clonoset))){
clonoset[, cluster_id := -1]
}
queue <- c(src)
clonoset[src, cluster_id := comp_id]
V_genes <- if (v_gene) clonoset$bestVGene[src] else unique(clonoset$bestVGene)
J_genes <- if (j_gene) clonoset$bestJGene[src] else unique(clonoset$bestJGene)
while(length(queue) != 0){
cur <- queue[1]
if(length(queue) > 1){
queue <- queue[2:length(queue)]
} else {
queue <- c()
}
candidates <- clonoset[clonoset$cluster_id == -1 &
bestVGene %in% V_genes &
bestJGene %in% J_genes,
.(cdr3aa, clone_id)]
if(nrow(candidates) != 0){
neighbors <- stringdistmatrix(clonoset[,cdr3aa][cur],
candidates[,cdr3aa], method = "hamming") <= 1
for(n in candidates[neighbors[1,], clone_id]){
clonoset[n, cluster_id := comp_id]
clonoset[cur, cluster_id := comp_id]
queue <- c(queue, n)
}
}
}
clonoset
}
test <- find_TCR_components_by_bfs(TCRgrObject)
clonoset(TCRgrObject) <- clonoset(TCRgrObject)[1:1000]
test <- find_TCR_components_by_bfs(TCRgrObject)
find_TCR_components_by_bfs <- function(TCRgrObject, v_gene = TRUE, j_gene = FALSE){
src <- 1
comp_id <- 1
clonoset <- clonoset(TCRgrObject)
clonoset[, cluster_id := -1]
pb <- txtProgressBar(min = 0, max = nrow(clonoset), style = 3)
while(sum(clonoset[,cluster_id] == -1) != 0){
clonoset <- bfs_for_TCRs(clonoset, src, comp_id, v_gene, j_gene)
src <- clonoset[cluster_id == -1, clone_id][1]
comp_id <- comp_id + 1
setTxtProgressBar(pb, src)
}
clonoset(TCRgrObject) <- clonoset
TCRgrObject
}
test <- find_TCR_components_by_bfs(TCRgrObject)
View(test)
clonoset(test)
?log
find_TCR_components_by_bfs <- function(TCRgrObject, v_gene = TRUE, j_gene = FALSE){
src <- 1
comp_id <- 1
clonoset <- clonoset(TCRgrObject)
clonoset[, cluster_id := -1]
pb <- txtProgressBar(min = 0, max = log(nrow(clonoset)), style = 3)
while(sum(clonoset[,cluster_id] == -1) != 0){
clonoset <- bfs_for_TCRs(clonoset, src, comp_id, v_gene, j_gene)
src <- clonoset[cluster_id == -1, clone_id][1]
comp_id <- comp_id + 1
setTxtProgressBar(pb, log(src))
}
clonoset(TCRgrObject) <- clonoset
TCRgrObject
}
test <- find_TCR_components_by_bfs(TCRgrObject)
test <- find_TCR_components_by_bfs(TCRgrObject)
file_path <- testthat::test_path("testdata/vaccinated_mice", "")
metadata_path <- testthat::test_path("testdata/metadata_vaccination.tsv")
TCRgrObject <- TCRgrapher(file_path, 1, 3, 4, 5, 7, metadata_path, 1, 2)
test <- find_TCR_components_by_bfs(TCRgrObject)
