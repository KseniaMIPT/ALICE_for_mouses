position2 <- as.numeric(t[2])
} else {
position1 <- as.numeric(substr(mutation, 2, length(mutation) - 1))
position2 <- as.numeric(substr(mutation, 2, length(mutation) - 1))
}
mispike_data_t <- mispike_data[(mispike_data$Parent.Protein == protein) & ((mispike_data$Starting.Position < position1)
& (mispike_data$Ending.Position > position1) | (mispike_data$Starting.Position < position2)
& (mispike_data$Ending.Position > position2)),]
mixture_data_t <- mixture_data[(mixture_data$Parent.Protein == protein) & ((mixture_data$Starting.Position < position1)
& (mixture_data$Ending.Position > position1) | (mixture_data$Starting.Position < position2)
& (mixture_data$Ending.Position > position2)),]
if(nrow(mispike_data_t) != 0){
Presence <- c(Presence, 'MiSpike')
print(mispike_data_t)
Epitopes <- c(Epitopes, paste(mispike_data_t$Epitope, collapse = ';'))
} else if(nrow(mixture_data_t) != 0){
Presence <- c(Presence, 'MiXture')
Epitopes <- c(Epitopes, paste(mixture_data_t$Epitope, collapse = ';'))
} else {
Presence <- c(Presence, 'No')
Epitopes <- c(Epitopes, 'No')
}
}
protein <- 'S'
position1 <- 69
position2 <- 70
mispike_data_t <- mispike_data[(mispike_data$Parent.Protein == protein) & ((mispike_data$Starting.Position < position1)
& (mispike_data$Ending.Position > position1) | (mispike_data$Starting.Position < position2)
& (mispike_data$Ending.Position > position2)),]
View(mixture_data_t)
View(mispike_data_t)
mispike_data_t <- mispike_data[(mispike_data$Parent.Protein == protein) & ((mispike_data$Starting.Position < position1)
protein <- 'S'
position1 <- 501
position2 <- 501
mispike_data_t <- mispike_data[(mispike_data$Parent.Protein == protein) & ((mispike_data$Starting.Position < position1)
& (mispike_data$Ending.Position > position1) | (mispike_data$Starting.Position < position2)
& (mispike_data$Ending.Position > position2)),]
i = 8
t <- strsplit(new_lineage$Defining.SNPs[i], ':')[[1]]
t
protein <- t[1]
mutation <- t[2]
if(substr(mutation, 1, 1) == 'd'){
t <- strsplit(substr(mutation, 4, length(mutation)), '/')[[1]]
position1 <- as.numeric(t[1])
position2 <- as.numeric(t[2])
} else {
position1 <- as.numeric(substr(mutation, 2, length(mutation) - 1))
position2 <- as.numeric(substr(mutation, 2, length(mutation) - 1))
}
position
position§
position§1
position1
substr(mutation, 1, 1)
substr(mutation, 2, length(mutation) - 1)
substr(mutation, 2, length(mutation) - 1)
substr(mutation, 2, 2
substr(mutation, 2, 2)
length(mutation)
nchar(mutation)
Presence <- c()
Epitopes <- c()
for(i in 1:nrow(new_lineage)){
t <- strsplit(new_lineage$Defining.SNPs[i], ':')[[1]]
protein <- t[1]
mutation <- t[2]
if(substr(mutation, 1, 1) == 'd'){
t <- strsplit(substr(mutation, 4, nchar(mutation)), '/')[[1]]
position1 <- as.numeric(t[1])
position2 <- as.numeric(t[2])
} else {
position1 <- as.numeric(substr(mutation, 2, nchar(mutation) - 1))
position2 <- as.numeric(substr(mutation, 2, nchar(mutation) - 1))
}
mispike_data_t <- mispike_data[(mispike_data$Parent.Protein == protein) & ((mispike_data$Starting.Position < position1)
& (mispike_data$Ending.Position > position1) | (mispike_data$Starting.Position < position2)
& (mispike_data$Ending.Position > position2)),]
mixture_data_t <- mixture_data[(mixture_data$Parent.Protein == protein) & ((mixture_data$Starting.Position < position1)
& (mixture_data$Ending.Position > position1) | (mixture_data$Starting.Position < position2)
& (mixture_data$Ending.Position > position2)),]
if(nrow(mispike_data_t) != 0){
Presence <- c(Presence, 'MiSpike')
print(mispike_data_t)
Epitopes <- c(Epitopes, paste(mispike_data_t$Epitope, collapse = ';'))
} else if(nrow(mixture_data_t) != 0){
Presence <- c(Presence, 'MiXture')
Epitopes <- c(Epitopes, paste(mixture_data_t$Epitope, collapse = ';'))
} else {
Presence <- c(Presence, 'No')
Epitopes <- c(Epitopes, 'No')
}
}
new_lineage$Presence <- Presence
new_lineage$Epitopes <- Epitopes
strsplit('iiii', '/')
Presence <- c()
Epitopes <- c()
for(i in 1:nrow(new_lineage)){
t <- strsplit(new_lineage$Defining.SNPs[i], ':')[[1]]
protein <- t[1]
mutation <- t[2]
if(substr(mutation, 1, 1) == 'd'){
t <- strsplit(substr(mutation, 4, nchar(mutation)), '/')[[1]]
if(length(t) == 2){
position1 <- as.numeric(t[1])
position2 <- as.numeric(t[2])
}
position1 <- as.numeric(t[1])
position2 <- as.numeric(t[1])
} else {
position1 <- as.numeric(substr(mutation, 2, nchar(mutation) - 1))
position2 <- as.numeric(substr(mutation, 2, nchar(mutation) - 1))
}
mispike_data_t <- mispike_data[(mispike_data$Parent.Protein == protein) & ((mispike_data$Starting.Position < position1)
& (mispike_data$Ending.Position > position1) | (mispike_data$Starting.Position < position2)
& (mispike_data$Ending.Position > position2)),]
mixture_data_t <- mixture_data[(mixture_data$Parent.Protein == protein) & ((mixture_data$Starting.Position < position1)
& (mixture_data$Ending.Position > position1) | (mixture_data$Starting.Position < position2)
& (mixture_data$Ending.Position > position2)),]
if(nrow(mispike_data_t) != 0){
Presence <- c(Presence, 'MiSpike')
Epitopes <- c(Epitopes, paste(mispike_data_t$Epitope, collapse = ';'))
} else if(nrow(mixture_data_t) != 0){
Presence <- c(Presence, 'MiXture')
Epitopes <- c(Epitopes, paste(mixture_data_t$Epitope, collapse = ';'))
} else {
Presence <- c(Presence, 'No')
Epitopes <- c(Epitopes, 'No')
}
}
new_lineage$Presence <- Presence
new_lineage$Epitopes <- Epitopes
Presence <- c()
Epitopes <- c()
for(i in 1:nrow(new_lineage)){
t <- strsplit(new_lineage$Defining.SNPs[i], ':')[[1]]
protein <- t[1]
mutation <- t[2]
if(substr(mutation, 1, 1) == 'd'){
t <- strsplit(substr(mutation, 4, nchar(mutation)), '/')[[1]]
if(length(t) == 2){
position1 <- as.numeric(t[1])
position2 <- as.numeric(t[2])
}
position1 <- as.numeric(t[1])
position2 <- as.numeric(t[1])
} else {
position1 <- as.numeric(substr(mutation, 2, nchar(mutation) - 1))
position2 <- as.numeric(substr(mutation, 2, nchar(mutation) - 1))
}
mispike_data_t <- mispike_data[(mispike_data$Parent.Protein == protein) & ((mispike_data$Starting.Position < position1)
& (mispike_data$Ending.Position > position1) | (mispike_data$Starting.Position < position2)
& (mispike_data$Ending.Position > position2)),]
mixture_data_t <- mixture_data[(mixture_data$Parent.Protein == protein) & ((mixture_data$Starting.Position < position1)
& (mixture_data$Ending.Position > position1) | (mixture_data$Starting.Position < position2)
& (mixture_data$Ending.Position > position2)),]
if(nrow(mispike_data_t) != 0){
Presence <- c(Presence, 'MiSpike')
Epitopes <- c(Epitopes, paste(unique(mispike_data_t$Epitope), collapse = ';'))
} else if(nrow(mixture_data_t) != 0){
Presence <- c(Presence, 'MiXture')
Epitopes <- c(Epitopes, paste(unique(mixture_data_t$Epitope), collapse = ';'))
} else {
Presence <- c(Presence, 'No')
Epitopes <- c(Epitopes, 'No')
}
}
new_lineage$Presence <- Presence
new_lineage$Epitopes <- Epitopes
write.csv(new_lineage, file='/Users/kseniia/Desktop/lineage_info_with_epitopes.csv')
mixture_data[mixture_data$Parent.Protein == 'ORF1ab]
mixture_data[mixture_data$Parent.Protein == 'ORF1ab,]
mixture_data[mixture_data$Parent.Protein == 'ORF1ab',]
mixture_data$Parent.Protein <- replace(mixture_data$Parent.Protein, mixture_data$Parent.Protein == 'ORF1ab', 'ORF1a')
Presence <- c()
Epitopes <- c()
for(i in 1:nrow(new_lineage)){
t <- strsplit(new_lineage$Defining.SNPs[i], ':')[[1]]
protein <- t[1]
mutation <- t[2]
if(substr(mutation, 1, 1) == 'd'){
t <- strsplit(substr(mutation, 4, nchar(mutation)), '/')[[1]]
if(length(t) == 2){
position1 <- as.numeric(t[1])
position2 <- as.numeric(t[2])
}
position1 <- as.numeric(t[1])
position2 <- as.numeric(t[1])
} else {
position1 <- as.numeric(substr(mutation, 2, nchar(mutation) - 1))
position2 <- as.numeric(substr(mutation, 2, nchar(mutation) - 1))
}
mispike_data_t <- mispike_data[(mispike_data$Parent.Protein == protein) & ((mispike_data$Starting.Position < position1)
& (mispike_data$Ending.Position > position1) | (mispike_data$Starting.Position < position2)
& (mispike_data$Ending.Position > position2)),]
mixture_data_t <- mixture_data[(mixture_data$Parent.Protein == protein) & ((mixture_data$Starting.Position < position1)
& (mixture_data$Ending.Position > position1) | (mixture_data$Starting.Position < position2)
& (mixture_data$Ending.Position > position2)),]
if(nrow(mispike_data_t) != 0){
Presence <- c(Presence, 'MiSpike')
Epitopes <- c(Epitopes, paste(unique(mispike_data_t$Epitope), collapse = ';'))
} else if(nrow(mixture_data_t) != 0){
Presence <- c(Presence, 'MiXture')
Epitopes <- c(Epitopes, paste(unique(mixture_data_t$Epitope), collapse = ';'))
} else {
Presence <- c(Presence, 'No')
Epitopes <- c(Epitopes, 'No')
}
}
new_lineage$Presence <- Presence
new_lineage$Epitopes <- Epitopes
write.csv(new_lineage, file='/Users/kseniia/Desktop/lineage_info_with_epitopes.csv')
mixture_data[mixture_data$Parent.Protein == 'ORF1ab',]
mispike <- 'MFVFLVLLPLVSSQCAQKFNGLTVLPPLLTDEMIAQYTSALLAGTITSGNFSQILPDPSKPSKRSFIEDLLFNKVTLADAGFIKSVASQSIIAYTMSLGAENSVAYSNNSIAIPIGINITRFQTLLALHRSYLTPGDSTECSNLLLQYGSFCTQLNRALTGIAVEQDKLITGRLQSLQTYVTQQLIRAAEIRASANLAATKCTLKSFTVEKGIYQTSNFRVQPTESIVRFPNITNLCPFGEVFNATRFASVYAWNRKRISNCTFEYVSQPFLMDLE'
peptides <- c('RFASVYAWNRKR', 'RFASVYAWNRKRISNC', 'VYAWNRKRIS', 'ITRFQTLLALHRSYL', 'FNGLTVLPPLLTDEM', 'CTFEYVSQPFLMDLE', 'NLLLQYGSFCTQLNR', 'QLIRAAEIRASANLAATK', 'SFIEDLLFNKVTLAD', 'QPTESIVRFPNITNL', 'TDEMIAQYTSALLAG', 'IGINITRFQTLLALH', 'CAQKFNGLTVLPPLL', 'FEYVSQPFLMDLEGK', 'STECSNLLLQYGSFC', 'YGSFCTQLNRALTGI', 'TQLNRALTGIAVEQD', 'AQYTSALLAGTITSG', 'LLFNKVTLADAGFIK', 'KPSKRSFIEDLLFNK', 'SNFRVQPTESIVRFP', 'IVRFPNITNLCPFGE', 'FTVEKGIYQTSNFRV', 'GIYQTSNFRVQPTES', 'TRFQTLLAL', 'TLLALHRSY', 'LLALHRSYL', 'GLTVLPPLL', 'LTDEMIAQY')
mixture <- 'MKFLVFLGIITTVAAFHQECSMDLFMRIFTIGTVTLKQGAVILRGHLRIAGHHLGRTFKVSIWNLDYIINLIIKNLSKSLTSRTLSYYKLGASQRVAGDAALALLLLDRLNQLESKMSDDQIGYYRRATRRIRGGDGKMKDLSPRWYFYYLGTGPEAGLPYGANKDGIIWVATEGALNTPKFYVYSRVKNLNSSRVQEEVQELYSPIFLIVAAIVFINVFAFPFTIYSLLLDDFVEIIKSQDLSVVSKVVYKHWPQIAQFAPSASAFFGMSRIGMEVTPSGTWLTYTGAIKLDDKAIVLQLPQGTTLPKGFYSKWYIRVGARKSAPLIELASWFTALTQHGKEDL'
find_position <- function(peptide, protein, n){
positions <- str_locate(protein, peptide)
if(!is.na(positions[1,1])){
peptide <- strsplit(peptide, '')
new_row <- c(rep('-', positions[1,1]-1), peptide[[1]], rep('-', n-positions[1,2]))
return(new_row)}
}
find_position <- function(peptide, protein, n){
positions <- str_locate(protein, peptide)
if(!is.na(positions[1,1])){
peptide <- strsplit(peptide, '')
new_row <- c(rep('-', positions[1,1]-1), peptide[[1]], rep('-', n-positions[1,2]))
return(new_row)}
}
mispike <- 'MFVFLVLLPLVSSQCAQKFNGLTVLPPLLTDEMIAQYTSALLAGTITSGNFSQILPDPSKPSKRSFIEDLLFNKVTLADAGFIKSVASQSIIAYTMSLGAENSVAYSNNSIAIPIGINITRFQTLLALHRSYLTPGDSTECSNLLLQYGSFCTQLNRALTGIAVEQDKLITGRLQSLQTYVTQQLIRAAEIRASANLAATKCTLKSFTVEKGIYQTSNFRVQPTESIVRFPNITNLCPFGEVFNATRFASVYAWNRKRISNCTFEYVSQPFLMDLE'
n <- nchar(mispike)
find_position <- function(peptide, protein, n){
positions <- str_locate(protein, peptide)
if(!is.na(positions[1,1])){
peptide <- strsplit(peptide, '')
new_row <- c(rep('-', positions[1,1]-1), peptide[[1]], rep('-', n-positions[1,2]))
return(new_row)}
}
mispike_list <- strsplit(mispike, '')
data <- as.data.frame(mispike_list)
data <- t(data)
mispike_data <- read.csv2('/Users/kseniia/Downloads/MiSpike_epitopes.csv')
peptides <- unique(mispike_data$Epitope)
for(p in peptides){
new_row <- find_position(p, mispike, n)
data <- rbind(data, new_row)
}
for(p in peptides){
new_row <- find_position(p, mispike, n)
data <- rbind(data, new_row)
}
View(data)
write.table(data, file='/Users/kseniia/Desktop/MiSpike.tsv', quote=FALSE, sep='\t', row.names=FALSE)
epitopes <- read.csv('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 2-Table 1.csv')
View(epitopes)
epitopes <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 2-Table 1.csv')
epitopes <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 2-Table 1.csv')
sink("/Users/kseniia/Desktop/epitopes.fasta")
for(i in 1:length(epitopes$Epitope)){
cat(paste('seq', i, '\n', sep=''))
cat(epitopes$Epitope[i])
cat('\n')
}
sink
sink("/Users/kseniia/Desktop/epitopes.fasta")
for(i in 1:length(epitopes$Epitope)){
cat(paste('>seq', i, '\n', sep=''))
cat(epitopes$Epitope[i])
cat('\n')
}
sink
HLA <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 3-Table 1.csv')
View(HLA)
sink()
HLA <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 3-Table 1.csv')
for(i in 1:nrow(HLA)){
cat(paste(HLA$loci, HLA$allele, sep='*'))
cat(',')
}
sink("/Users/kseniia/Desktop/HLA.txt")
HLA <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 3-Table 1.csv')
for(i in 1:nrow(HLA)){
cat(paste(HLA$loci, HLA$allele, sep='*'))
if(i %% 20 == 0){
cat('\n')
} else {
cat(',')
}
}
sink()
sink("/Users/kseniia/Desktop/HLA.txt")
HLA <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 3-Table 1.csv')
for(i in 1:nrow(HLA)){
cat(paste(HLA$loci, HLA$allele, sep='*'))
if(i %% 20 == 0){
cat('\n')
} else {
cat(',')
}
}
sink()
sink("/Users/kseniia/Desktop/HLA.txt")
HLA <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 3-Table 1.csv')
for(i in 1:nrow(HLA)){
cat(paste(HLA$loci[i], HLA$allele[i], sep='*'))
if(i %% 20 == 0){
cat('\n')
} else {
cat(',')
}
}
sink()
sink("/Users/kseniia/Desktop/HLA.txt")
HLA <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 3-Table 1.csv')
for(i in 1:nrow(HLA)){
cat(paste(HLA$loci[i], HLA$allele[i], sep='*'))
if(i %% 20 == 0){
cat('\n\n')
} else {
cat(',')
}
}
sink()
library(stringr)
library(phylotools)
library(unpivotr)
library(dplyr)
strsplit(HLA$allele, ':')
strsplit(HLA$allele, ':')
strsplit(HLA$allele, ':')
HLA$allele <- strsplit(HLA$allele, ':')
HLA$allele <- paste(strsplit(HLA$allele, ':'), collapse = TRUE)
HLA <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 3-Table 1.csv')
HLA$allele <- strsplit(HLA$allele, ':')
?apply
?sapply
HLA$allele <- lapply(HLA$allele, paste, collapse=TRUE, sep='')
HLA$allele <- lapply(HLA$allele, paste, collapse='')
for(i in 1:nrow(HLA)){
cat(paste(HLA$loci[i], HLA$allele[i], sep=''))
if(i %% 20 == 0){
cat('\n\n')
} else {
cat(',')
}
}
sink()
sink("/Users/kseniia/Desktop/HLA.txt")
HLA <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 3-Table 1.csv')
HLA$allele <- strsplit(HLA$allele, ':')
HLA$allele <- lapply(HLA$allele, paste, collapse='')
for(i in 1:nrow(HLA)){
cat(paste(HLA$loci[i], HLA$allele[i], sep=''))
if(i %% 20 == 0){
cat('\n\n')
} else {
cat(',')
}
}
sink()
epitopes <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 2-Table 1.csv')
sink("/Users/kseniia/Desktop/epitopes.fasta")
for(i in 1:length(epitopes$Epitope)){
cat(paste('>seq', i, '\n', sep=''))
cat(epitopes$Epitope[i])
cat('\n')
}
sink()
NetMHC <- read.csv2('/Users/kseniia/Desktop/NetMHC_1csv')
NetMHC <- read.csv2('/Users/kseniia/Desktop/NetMHC_1.csv')
View(NetMHC)
NetMHC <- NetMHC[-1,]
aggregate(NetMHC$X.9, by=list(NetMHC$X.1), FUN=sum)
data$seq <- substring(data$Group.1, 4, -1)
data$seq <- strsplit(data$Group.1, 'q')
?strsplit
data <- data[order(NetMHC$X),]
View(data)
data <- aggregate(NetMHC$X.9, by=list(NetMHC$X.1), FUN=sum)
data <- data[order(NetMHC$X.1),]
data <- aggregate(NetMHC$X.9, by=list(NetMHC$X.1), FUN=sum)
data <- data[order(unique(NetMHC$X.1)),]
data <- aggregate(NetMHC$X.9, by=list(NetMHC$X.1), FUN=sum)
write.csv2(data, file='/Users/kseniia/Desktop/NetMHC_grouped.csv')
MHC <- read.csv('/Users/kseniia/Desktop/MHC_II.txt')
View(MHC)
MHC <- read.csv('/Users/kseniia/Desktop/MHC_II.txt')
MHC <- read.csv('/Users/kseniia/Desktop/MHC_II.txt')
MHC <- read.csv('/Users/kseniia/Desktop/MHC_II.txt')
MHC <- colnames(MHC)
MHC <- strsplit(MHC$V1, 'B1')
MHC <- strsplit(MHC, 'B1')
MHC <- MHC[2,]
MHC
unlist(MHC)
epitopes <- read.csv2('/Users/kseniia/Desktop/lineage_info_with_epitopes/Sheet 2-Table 1.csv')
epitopes
seq(1,132,2)
epitopes_without_mutation <- epitopes[seq(1,132,2),]
epitopes_without_mutation <- epitopes[seq(2,132,2),]
epitopes_without_mutation <- epitopes[seq(1,132,2),]
epitopes_wit_mutation <- epitopes[seq(2,132,2),]
epitopes_without_mutation <- epitopes[seq(1,132,2),]
epitopes_with_mutation <- epitopes[seq(2,132,2),]
epitopes_without_mutation
epitopes_with_mutation$N_binders_MHC_I/epitopes_without_mutation$N_binders_MHC_I
epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I
epitopes_with_mutation$N_binders_MHC_I
epitopes_without_mutation$N_binders_MHC_I
epitopes_with_mutation$N_binders_MHC_I == 'Too short'
epitopes_with_mutation$N_binders_MHC_I != 'Too short'
132/2
1:66([epitopes_with_mutation$N_binders_MHC_I != 'Too short']
1:66[epitopes_with_mutation$N_binders_MHC_I != 'Too short']
1:66[epitopes_with_mutation$N_binders_MHC_I == 'Too short']
v1 <- 1:66
v1[epitopes_with_mutation$N_binders_MHC_I == 'Too short']
v1[epitopes_with_mutation$N_binders_MHC_I == 'Too short']
v1[epitopes_without_mutation$N_binders_MHC_I == 'Too short']
c(v1[epitopes_with_mutation$N_binders_MHC_I == 'Too short'], v1[epitopes_without_mutation$N_binders_MHC_I == 'Too short'])
v1 <- 1:66
v2 <- c(v1[epitopes_with_mutation$N_binders_MHC_I == 'Too short'], v1[epitopes_without_mutation$N_binders_MHC_I == 'Too short'])
epitopes_without_mutation <- epitopes_without_mutation[-v2,]
epitopes_with_mutation <- epitopes_with_mutation[-v2,]
epitopes_with_mutation$N_binders_MHC_I <- as.numeric(epitopes_with_mutation$N_binders_MHC_I)
epitopes_without_mutation$N_binders_MHC_I <- as.numeric(epitopes_without_mutation$N_binders_MHC_I)
epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I
boxplot(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I)
histogram(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I)
hist(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I)
?hist
hist(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I, breaks=seq(0, 2.5, 0.1))
hist(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I, breaks=seq(0, 2.5, 0.1),
main = '', xlab='number of bindings with mutation devided by number of bindings without mutation')
hist(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I, breaks=seq(0, 2.5, 0.1),
main = '', xlab='number of bindings with mutation devided by number of bindings without mutation')
hist(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I, breaks=seq(0, 2.5, 0.1),
main = '', xlab='number of bindings with mutation devided by number of bindings without mutation')
hist(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I, breaks=seq(0, 2.5, 0.1),
main = '', xlab='number of bindings with mutation\ndevided by number of bindings without mutation')
hist(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I, breaks=seq(0, 2.5, 0.1),
main = '', xlab='number of bindings with mutation\ndevided by number of bindings without mutation')
hist(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I, breaks=seq(0, 2.5, 0.1),
main = '', xlab='number of bindings with mutation\ndevided by number of bindings without mutation')
?wilcox.test
wilcox.test(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I)
wilcox.test(epitopes_with_mutation$N_binders_MHC_I / epitopes_without_mutation$N_binders_MHC_I, mu = 1)
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
library(devtools)
devtools::document()
devtools::document()
setwd()
ls .
ls ./
setwd(".")
devtools::document()
load_all()
load_all('/Users/kseniia/my_R_packages/tcrgrapher')
load_all('/Users/kseniia/my_R_packages/tcrgrapher')
devtools::document(pkg='/Users/kseniia/my_R_packages/tcrgrapher')
devtools::document(pkg='/Users/kseniia/my_R_packages/tcrgrapher')
load_all('/Users/kseniia/my_R_packages/tcrgrapher')
?find_cluster
load_all('/Users/kseniia/my_R_packages/tcrgrapher')
load_all('/Users/kseniia/my_R_packages/tcrgrapher')
load_all('/Users/kseniia/my_R_packages/tcrgrapher')
load("/Users/kseniia/my_R_packages/tcrgrapher/data/OLGAVJ_MOUSE_TRB.rda")
View(OLGAVJ_MOUSE_TRB)
system('ls')
V_prob <- c(0.0323294,0.0419045,0.0203539,0.0620074,0.0635898,0,0,0,0.000921656,0,0,0.0401011,0.0510892,0.0183319,0.0620405,0,0.0380578,0.0168908,0.0332129,0.0410646,0.0214121,0,0.0649873,0.016619,0.0138969,0.0190288,0.0141244,0.0756227,0,0.0866833,0,0,0.0346787,0.00303834,0.128013)
J_prob <- c(0.0990381,0.075288,0.061656,0.0830776,0.0296746,0.0463525,0,0.125429,0.0324093,0.0820461,0.0881859,0.106868,0,0.169975)
V_prob * J_prob
V_prob %*% J_prob
matrix(V_prob, ncol=1)
V_prob_matrix <- matrix(V_prob, ncol=1)
matrix(J_prob, nrow=1)
J_prob_matrix <- matrix(J_prob, nrow=1)
V_prob_matrix %*% J_prob_matrix
C57BL6 <- V_prob_matrix %*% J_prob_matrix
C57BL6 <- V_prob_matrix %*% J_prob_matrix
colnames(C57BL6) <- colnames(OLGAVJ_MOUSE_TRB)
rownames(C57BL6) <- rownames(OLGAVJ_MOUSE_TRB)
View(C57BL6)
View(C57BL6)
View(C57BL6)
save(C57BL6, file='/Users/kseniia/my_R_packages/tcrgrapher/data/C57BL6_mouse_TRB.rda')
save(C57BL6, file='/Users/kseniia/my_R_packages/tcrgrapher/data/C57BL6_MOUSE_TRB.rda')
save(C57BL6, file='/Users/kseniia/my_R_packages/tcrgrapher/data/C57BL6_MOUSE_TRB.rda')
save(C57BL6, file='/Users/kseniia/my_R_packages/tcrgrapher/data/C57BL6_MOUSE_TRB.rda')
load("~/my_R_packages/tcrgrapher/VDJT.rda")
View(VDJT)
load("~/my_R_packages/tcrgrapher/.RData")
library(devtools)
document()
devtools::document()
setwd(/Users/kseniia/my_r_packages/tcrgrapher)
setwd('/Users/kseniia/my_R_packages/tcrgrapher')
devtools::document()
devtools::document()
devtools::document()
load("~/my_R_packages/tcrgrapher/.RData")
devtools::document()
load("~/my_R_packages/tcrgrapher/data/OLGAVJ_MOUSE_TRB.rda")
C57BL6_MOUSE_TRB <- C57BL6
save(C57BL6_MOUSE_TRB, file='/Users/kseniia/my_R_packages/tcrgrapher/data/C57BL6_MOUSE_TRB.rda')
devtools::document()
load("/Users/kseniia/Downloads/C57BL6_MOUSE_TRB.rda")
View(OLGAVJ_MOUSE_TRB)
View(C57BL6_MOUSE_TRB)
