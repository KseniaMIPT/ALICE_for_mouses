% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EdgeR_pipeline.R
\name{edgeR_pipeline}
\alias{edgeR_pipeline}
\title{edgeR_pipeline}
\usage{
edgeR_pipeline(
  TCRgrCounts,
  comparison,
  min.count = 1,
  min.total.count = 5,
  large.n = 1,
  min.prop = 0.5,
  normalization_method = "TMM"
)
}
\arguments{
\item{comparison}{name of the column that specifies levels of comparison in the metadata}

\item{min.count}{parameter from edgeR::filterByExpr function. Minimum count
required for at least some samples. Default value is 1.}

\item{min.total.count}{parameter from edgeR::filterByExpr function.
Minimum total count required. Default value is 5.}

\item{large.n}{parameter from edgeR::filterByExpr function. Number of samples
per group that is considered to be “large”. Default value is 1.}

\item{min.prop}{parameter from edgeR::filterByExpr function. Minimum
proportion of samples in the smallest group that express the gene. Default
value is 0.5.}

\item{normalization_method}{method to be used to edgeR::calcNormFactors function}

\item{count_table}{a data frame where each row corresponds to unique
amino acid clonotype and each column corresponds to the sample.}
}
\value{
data.table with statistics for every clonotype performed for each pair
of groups and for every sample vs all others. 'comparison' column shows
comparisons in the format 'Group1 vs Group2'.
In this case, LFC values are negative if the clonotype is expanded in 'Group1' and
positive if it is expanded in 'Group2'.
}
\description{
Function performs statistical analysis by edgeR to identify significantly
expanded clonotypes. First, it filters the data using relatively mild conditions
that better suit TCR repertoire data. Second, it normalize counts and estimate
dispersion by standard edgeR methods. Finally, it performs all pairwise comparisons
between groups and compares each group vs all others using glm and QL F-test.
}
\examples{
# find significantly expanded clonotypes after vaccination
# my_metadata table contains column 'vaccination_status' with groups of comparison
# edgeR_pipeline(my_count_table, my_metadata, 'vaccination_status')
}
